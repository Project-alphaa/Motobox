//file:noinspection GroovyAssignabilityCheck
plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'org.jetbrains.kotlin.jvm' version "1.9.22"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

static String terraformersUrl() {
	def url = "https://maven.terraformersmc.com/"
	def conn = new URL(url).openConnection()
	conn.connect()
	url = conn.getResponseCode() == 521 ? "https://raw.githubusercontent.com/TerraformersMC/Archive/main/releases" : url
	return url
}

loom {
	setAccessWidenerPath(file("src/main/resources/motobox.accesswidener"))
}

repositories {
	maven { url "https://maven.gegy.dev/" }
	maven { url terraformersUrl() }
	maven { url "https://aperlambda.github.io/maven" }
	maven { url "https://hephaestus.dev/release" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://storage.googleapis.com/devan-maven/" }
	maven { url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }

	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	flatDir {
		dir "$projectDir/libs"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-1.20.1:4.4.2"

	// Controller Support
	include modImplementation("dev.lambdaurora:spruceui:${project.spruceui_version}")
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "maven.modrinth:midnightcontrols:${project.midnightcontrols_version}"
	api('org.aperlambda:lambdajcommon:1.8.1') {
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}

	// Json't
	include modImplementation("curse.maven:arrp-463113:${project.arrp_version}")

	// Json entity models
//	modImplementation "maven.modrinth:jsonem:${project.jsonem_version}"
//	include "maven.modrinth:jsonem:${project.jsonem_version}"

	modImplementation("net.fabricmc:fabric-language-kotlin:1.10.17+kotlin.1.9.22")

	modImplementation "com.terraformersmc:modmenu:7.2.2", {
		exclude module: "fabric-api"
	}

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
